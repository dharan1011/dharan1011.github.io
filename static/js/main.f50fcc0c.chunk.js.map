{"version":3,"sources":["components/Header.js","components/SkillBadge.js","components/Skills.js","components/ProjectCard.js","components/App.js","index.js"],"names":["Header","name","designation","organisation","Container","Row","Col","xs","className","style","padding","prototype","PropTypes","string","isRequired","SkillBadge","type","skill","info","target","useRef","Fragment","OverlayTrigger","key","placement","overlay","Tooltip","id","Badge","pill","variant","ref","Skills","skills","paddingRight","map","index","ProjectCard","description","techList","link","Card","Body","Title","Text","Link","href","App","userInfo","CardColumns","project","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f50fcc0c.chunk.js","sourcesContent":["import React from 'react';\nimport {Row, Col, Container} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst Header = ({name, designation, organisation}) => (\n  <Container>\n    <Row>\n      <Col xs={12}>\n        <h1 className=\"display-2\">{name}</h1>\n      </Col>\n    </Row>\n    <Row className=\"flex-nowrap align-items-baseline\">\n      <Col xs=\"auto\">\n        <p className=\"h3\">{designation}</p>\n      </Col>\n      <Col xs=\"auto\" style={{padding: 0}}>\n        <p className=\"h4\">@</p>\n      </Col>\n      <Col xs=\"auto\">\n        <p className=\"h4\">{organisation}</p>\n      </Col>\n    </Row>\n  </Container>\n);\n\nHeader.prototype = {\n  name: PropTypes.string.isRequired,\n  designation: PropTypes.string.isRequired,\n  organisation: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, {useRef} from 'react';\nimport {Badge, Tooltip, OverlayTrigger} from 'react-bootstrap';\n\nconst SkillBadge = ({type, skill, info}) => {\n  const target = useRef(null);\n  return (\n    <React.Fragment>\n      <OverlayTrigger\n        key=\"temp\"\n        placement=\"right\"\n        overlay={<Tooltip id=\"overlay-badge\">{info}</Tooltip>}>\n        <Badge pill variant={type} ref={target}>\n          {skill}\n        </Badge>\n      </OverlayTrigger>\n    </React.Fragment>\n  );\n};\nexport default SkillBadge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Row, Col, Container} from 'react-bootstrap';\nimport SkillBadge from './SkillBadge';\n\nconst Skills = ({skills}) => {\n  return (\n    <Container>\n      <Row>\n        <Col xs=\"auto\" style={{paddingRight: 0}} />\n        {skills.map(({skill, type, info}, index) => (\n          <Col xs=\"auto\" style={{padding: 2}}>\n            <SkillBadge type={type} skill={skill} info={info} key={index} />\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nSkills.prototype = {\n  skills: {\n    skill: PropTypes.string.isRequired,\n    info: PropTypes.string.isRequired,\n  },\n};\n\nexport default Skills;\n","import React from 'react';\nimport {Card} from 'react-bootstrap';\nconst ProjectCard = ({name, techList, description, link}) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{name}</Card.Title>\n      <Card.Text>{description}</Card.Text>\n      <Card.Link href={link}>Link</Card.Link>\n    </Card.Body>\n  </Card>\n);\nexport default ProjectCard;\n","import React from 'react';\nimport './App.css';\nimport './App.scss';\nimport {Container, Row, CardColumns, Col} from 'react-bootstrap';\nimport Header from './Header';\nimport Skills from './Skills';\nimport ProjectCard from './ProjectCard';\n\nfunction App() {\n  const userInfo = {\n    name: 'Dharan Aditya',\n    designation: 'Asst System Engineer',\n    organisation: 'TCS',\n  };\n  const skills = [\n    {skill: 'React', type: 'primary', info: 'foobar'},\n    {skill: 'Java', type: 'primary', info: 'foobar'},\n    {skill: 'C++', type: 'primary', info: 'foobar'},\n    {skill: 'Python', type: 'primary', info: 'foobar'},\n    {skill: 'Android', type: 'secondary', info: 'foobar'},\n    {skill: 'Nginx', type: 'secondary', info: 'foobar'},\n  ];\n  const projects = [\n    {\n      name: 'algorun',\n      techList: ['node.js', 'react.js'],\n      description: 'Online C++ Code Ide and Compiler',\n      link: 'https://algorun.foobar.works',\n    },\n  ];\n  return (\n    <Container>\n      <Row>\n        <Header {...userInfo} />\n      </Row>\n      <Row>\n        <Skills skills={skills} />\n      </Row>\n      <Row>\n        <Container>\n          <Row>\n            <Col>\n              <div className=\"h4\">Projects</div>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <CardColumns>\n                {projects.map((project, index) => (\n                  <ProjectCard {...project} key={index} />\n                ))}\n              </CardColumns>\n            </Col>\n          </Row>\n        </Container>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}